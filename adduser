#!/bin/bash
[[ -z "$INFO_LEVEL" ]] && source ./bits/bootstrap/logging
set -euo pipefail ; IFS=$'\n\t'

#-----------
# Configurations
#-----------

USER=${USER-deployer}
GROUP=${GROUP-www-data}
SSHKEYS=${SSHKEYS=false}
PASSWD=${PASSWD-asdf1234}

#-----------
# Install Script
#-----------

ADDUSER_OUTPUT=/tmp/adduser.log

if [[ "`id -u $LAUNCHER_OWNER 2>/dev/null`" == "" ]]; then
  notify "  -- Creating $USER user"
  if [[ "$OS" == "ubuntu" ]]; then
    SCRIPT_OUTPUT=$(adduser --disabled-password --gecos "" $USER > $ADDUSER_OUTPUT 2>&1)
    ERROR="Unable add user $USER due to ..." ./bits/bootstrap/failonerrors $? $ADDUSER_OUTPUT
    [ $? -ne 0 ] && exit 1
  else
    SCRIPT_OUTPUT=$(useradd $USER > $ADDUSER_OUTPUT 2>&1)
    ERROR="Unable add user $USER due to ..." ./bits/bootstrap/failonerrors $? $ADDUSER_OUTPUT
    [ $? -ne 0 ] && exit 1
  fi

  if [[ "$PASSWD" == "disabled" ]] || [[ "$PASSWD" == "" ]]; then
    debug "  -- No password set"
  else
    notify "  -- Creating password"

    SCRIPT_OUTPUT=$(./bits/deploykeys/passwd $USER $PASSWD > $ADDUSER_OUTPUT 2>&1)
    ERROR="Unable set password due to ..." ./bits/bootstrap/failonerrors $? $ADDUSER_OUTPUT
    [ $? -ne 0 ] && exit 1
  fi
else
  debug "  -- $USER user already exists"
fi

if [[ "$SSHKEYS" == true ]]; then
  if [[ ! -e /home/$USER/.ssh/id_dsa ]]; then
    OWNER="$USER:$GROUP" ./bits/bootstrap/mkdir /home/$USER/.ssh
    su $USER -c ./bits/deploykeys/sshkeys /home/$USER/.ssh/id_dsa
  fi
elif [[ "$SSHKEYS" != false ]]; then
  if [[ ! -e /home/$SSHKEYS/.ssh ]]; then
    warn "  -- WARNING, unable to copy keys from $SSHKEYS to $USER"
  elif [[ ! -e /home/$USER/.ssh ]]; then
    notify "  -- Copying SSH access from $SSHKEYS to $USER"
    cp -R /home/$SSHKEYS/.ssh /home/$USER/.ssh
    chown -R $USER:$GROUP /home/$USER/.ssh
  else
    debug "  -- Keys already setup for $USER"
  fi
fi


